//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BatalhaNaval.Client.NavalBattleProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NavalBattleProxy.INavalBattleService", CallbackContract=typeof(BatalhaNaval.Client.NavalBattleProxy.INavalBattleServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface INavalBattleService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INavalBattleService/Login")]
        void Login(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INavalBattleService/Play")]
        void Play(string playerName, System.Drawing.Point coordinate);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INavalBattleService/PutShip")]
        void PutShip(string playerName, int shipType, System.Drawing.Point[] coordinates);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INavalBattleService/Ready")]
        void Ready(string playerName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INavalBattleServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyLogin", ReplyAction="http://tempuri.org/INavalBattleService/NotifyLoginResponse")]
        void NotifyLogin(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyPlay", ReplyAction="http://tempuri.org/INavalBattleService/NotifyPlayResponse")]
        void NotifyPlay(string playerName, System.Drawing.Point coordinate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyPutShip", ReplyAction="http://tempuri.org/INavalBattleService/NotifyPutShipResponse")]
        void NotifyPutShip(string playerName, int shipType, System.Drawing.Point[] coordinates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyShipDestruction", ReplyAction="http://tempuri.org/INavalBattleService/NotifyShipDestructionResponse")]
        void NotifyShipDestruction(string playerSource, string playerTarget, int tipoNavio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyWaterShoot", ReplyAction="http://tempuri.org/INavalBattleService/NotifyWaterShootResponse")]
        void NotifyWaterShoot(string playerSource, string playerTarget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyShipHit", ReplyAction="http://tempuri.org/INavalBattleService/NotifyShipHitResponse")]
        void NotifyShipHit(string playerSource, string playerTarget, int tipoNavio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/SetToken", ReplyAction="http://tempuri.org/INavalBattleService/SetTokenResponse")]
        void SetToken();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalBattleService/NotifyIlegalCall", ReplyAction="http://tempuri.org/INavalBattleService/NotifyIlegalCallResponse")]
        void NotifyIlegalCall(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INavalBattleServiceChannel : BatalhaNaval.Client.NavalBattleProxy.INavalBattleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NavalBattleServiceClient : System.ServiceModel.DuplexClientBase<BatalhaNaval.Client.NavalBattleProxy.INavalBattleService>, BatalhaNaval.Client.NavalBattleProxy.INavalBattleService {
        
        public NavalBattleServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NavalBattleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NavalBattleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NavalBattleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NavalBattleServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(string playerName) {
            base.Channel.Login(playerName);
        }
        
        public void Play(string playerName, System.Drawing.Point coordinate) {
            base.Channel.Play(playerName, coordinate);
        }
        
        public void PutShip(string playerName, int shipType, System.Drawing.Point[] coordinates) {
            base.Channel.PutShip(playerName, shipType, coordinates);
        }
        
        public void Ready(string playerName) {
            base.Channel.Ready(playerName);
        }
    }
}
